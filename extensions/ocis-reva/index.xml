<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reva on ownCloud</title>
    <link>https://owncloud.github.io/extensions/ocis-reva/</link>
    <description>Recent content in Reva on ownCloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://owncloud.github.io/extensions/ocis-reva/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting Started</title>
      <link>https://owncloud.github.io/extensions/ocis-reva/getting-started/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis-reva/getting-started/</guid>
      <description>Installation  Docker  Dependencies   Binaries  Dependencies     Usage  Health       Installation So far we are offering two different variants for the installation. You can choose between Docker or pre-built binaries which are stored on our download mirrors and GitHub releases. Maybe we will also provide system packages for the major distributions later if we see the need for it.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://owncloud.github.io/extensions/ocis-reva/configuration/</link>
      <pubDate>Fri, 02 Oct 2020 13:39:24 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis-reva/configuration/</guid>
      <description>Configuration  Configuration using config files Envrionment variables Commandline flags   Root Command Sub Commands  ocis-reva storage-home ocis-reva storage-eos ocis-reva sharing ocis-reva health ocis-reva reva-storage-public-link ocis-reva storage-root ocis-reva frontend ocis-reva storage-home-data ocis-reva reva-storage-metadata ocis-reva gateway ocis-reva storage-oc-data ocis-reva auth-bearer ocis-reva storage-oc ocis-reva auth-basic ocis-reva users ocis-reva storage-eos-data       Configuration oCIS Single Binary is not responsible for configuring extensions. Instead, each extension could either be configured by environment variables, cli flags or config files.</description>
    </item>
    
    <item>
      <title>Building</title>
      <link>https://owncloud.github.io/extensions/ocis-reva/building/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis-reva/building/</guid>
      <description>As this project is built with Go, so you need to install that first. The installation of Go is out of the scope of this document, please follow the official documentation for Go.To build this project you have to install Go &amp;gt;= v1.13. After the installation of the required tools you need to get the sources:
git clone https://github.com/owncloud/ocis-reva.git cd ocis-reva All required tool besides Go itself and make are bundled or getting automatically installed within the GOPATH.</description>
    </item>
    
    <item>
      <title>Users</title>
      <link>https://owncloud.github.io/extensions/ocis-reva/users/</link>
      <pubDate>Thu, 16 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis-reva/users/</guid>
      <description>Demo driver This is a simple user driver for testing. It contains three users:
einstein:relativity marie:radioactivty richard:superfluidity In order to use the demo driver you need to export the relevant environment variable:
export REVA_USERS_DRIVER=demo JSON driver In order to switch from the ldap driver to JSON based users you need to export the relevant environment variables:
export REVA_USERS_DRIVER=json export REVA_USERS_JSON=/path/to/users.json For the format of the users.json have a look at the reva examples</description>
    </item>
    
    <item>
      <title>Storages</title>
      <link>https://owncloud.github.io/extensions/ocis-reva/storages/</link>
      <pubDate>Mon, 27 Apr 2020 18:46:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis-reva/storages/</guid>
      <description>Storage commands ocis-reva has multiple storage provider commands to preconfigure different default configurations for the reva storage provider service. While you could rerun ocis-reva storage-oc multiple times with different flags to get multiple instances we are giving the different commands the necessary default configuration to allow the ocis binary to simply start them and not deal with configuration.
Storage providers To manage the file tree ocis uses reva storage providers that are accessing the underlying storage using a storage driver.</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://owncloud.github.io/extensions/ocis-reva/testing/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis-reva/testing/</guid>
      <description>API Acceptance tests We are using the ownCloud 10 API acceptance testsuite against ocis. To set this up you need the owncloud 10 core repo, a ldap server that the acceptance tests can use to manage users, a redis server for file-versions and the ocis-reva code.
Getting the tests All you need to do to get the acceptance tests is check out the core repo:
git clone https://github.com/owncloud/core.git Run a ldap server in a docker container The ownCloud 10 acceptance tests will need write permission.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://owncloud.github.io/extensions/ocis-reva/license/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis-reva/license/</guid>
      <description>This project is licensed under the Apache 2.0 license. For the license of the used libraries you have to check the respective sources.</description>
    </item>
    
    <item>
      <title>Updating reva</title>
      <link>https://owncloud.github.io/extensions/ocis-reva/updating/</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis-reva/updating/</guid>
      <description>    Updating reva     Updating reva  Run go get github.com/cs3org/reva@master Create a changelog entry containing changes that were done in reva Create a Pull Request to ocis-reva master with those changes If test issues appear, you might need to adjust the tests After the PR is merged, consider doing a release of ocis-reva  </description>
    </item>
    
    <item>
      <title>Releasing</title>
      <link>https://owncloud.github.io/extensions/ocis-reva/releasing/</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://owncloud.github.io/extensions/ocis-reva/releasing/</guid>
      <description>Preparation Release     To release a new version of ocis-reva, you have to follow a few simple steps.
Preparation  Before releasing, make sure that reva has been updated to the desired version Create a new branch e.g. release-x.x.x where x.x.x is the version you want to release. Checkout the preparation branch. Create a new changelog folder and move the unreleased snippets there. mkdir changelog/x.</description>
    </item>
    
  </channel>
</rss>