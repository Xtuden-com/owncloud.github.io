<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deployment on ownCloud</title>
    <link>https://owncloud.github.io/ocis/deployment/</link>
    <description>Recent content in Deployment on ownCloud</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Oct 2020 20:35:00 +0100</lastBuildDate>
    
	<atom:link href="https://owncloud.github.io/ocis/deployment/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Basic Remote Setup</title>
      <link>https://owncloud.github.io/ocis/deployment/basic-remote-setup/</link>
      <pubDate>Thu, 27 Feb 2020 20:35:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/ocis/deployment/basic-remote-setup/</guid>
      <description>Use the binary  Add your hostname to the idp config Start the ocis fullstack server   Use Docker Compose     Out of the box the ocis single binary and the owncloud/ocis docker image are configured to run on localhost for quick testing and development.
If you need to access ocis on a VM or a remote machine e.g. when testing a mobile client you need to configure ocis to run on a different host.</description>
    </item>
    
    <item>
      <title>ocis with traefik deployment scenario</title>
      <link>https://owncloud.github.io/ocis/deployment/ocis_traefik/</link>
      <pubDate>Mon, 12 Oct 2020 14:04:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/ocis/deployment/ocis_traefik/</guid>
      <description>Overview Node  Requirements Setup on server Stack Config       Overview  ocis running on a hcloud node behind traefik as reverse proxy Cloudflare DNS is resolving the domain Letsencrypt provides a ssl certificate for the domain Traefik docker container terminates ssl and forwards http requests to ocis  Node Requirements   Server running Ubuntu 20.04 is public availible with a static ip address</description>
    </item>
    
    <item>
      <title>ocis frontend with oc10 backend deployment scenario</title>
      <link>https://owncloud.github.io/ocis/deployment/ocis_oc10_backend/</link>
      <pubDate>Mon, 12 Oct 2020 14:04:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/ocis/deployment/ocis_oc10_backend/</guid>
      <description>Overview  Node Setup   Node Deployment  Requirements Setup on server Stack Config  Repository structure Traefik ocis oc10         This deployment scenario shows how to use ocis as frontend for a existing owncloud 10 installation. ocis will allow owncloud 10 users to log in and work with their files.
Overview Node Setup  ocis and oc10 running as docker containers behind traefik as reverse proxy Cloudflare DNS is resolving one domain for ocis and one for oc10 Letsencrypt is providing valid ssl certificate for both domains  Node Deployment Requirements   Server running Ubuntu 20.</description>
    </item>
    
    <item>
      <title>ocis with konnectd on external node deployment scenario</title>
      <link>https://owncloud.github.io/ocis/deployment/ocis_external_konnectd/</link>
      <pubDate>Mon, 12 Oct 2020 14:39:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/ocis/deployment/ocis_external_konnectd/</guid>
      <description>Overview Nodes  Requirements Setup on ocis server Setup on idp server Stack Config  Repository structure Traefik Konnectd ocis         This scenario shows how to setup ocis with konnectd as idp running on a separate node. Both node are having separate domains pointing on the servers.
Overview  ocis and konnectd running on linux nodes behind traefik as reverse proxy Cloudflare DNS is resolving the domains Letsencrypt provides ssl certificates for the domains Traefik docker container terminates ssl and forwards http requests to the services  Nodes Requirements   Server running Ubuntu 20.</description>
    </item>
    
    <item>
      <title>Bridge</title>
      <link>https://owncloud.github.io/ocis/deployment/bridge/</link>
      <pubDate>Thu, 27 Feb 2020 20:35:00 +0100</pubDate>
      
      <guid>https://owncloud.github.io/ocis/deployment/bridge/</guid>
      <description>Current status How to do it  Install the owncloud 10 graphapi app Enable the graphapi app Start ocis-glauth  Grab it! Run it! Check it is up and running   Start ocis-phoenix  Get it! Run it!   Start ocis-konnectd  Get it! Set environment variables   Configure clients  Run it! Check it is up and running   Patch owncloud Install the owncloud 10 openidconnect app   Next steps     We are planning to build a bridge from ownCloud 10 to ocis.</description>
    </item>
    
  </channel>
</rss>